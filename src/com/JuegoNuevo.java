/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com;

import java.awt.Component;
import java.awt.Container;
import java.awt.Font;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import static com.ChangeFonts.changeFont;

/**
 *
 * @author breix
 */
public class JuegoNuevo extends javax.swing.JFrame {
    private String usuario1;
    private String usuario2;
    private ArrayList<Partida> partidas = new ArrayList<Partida>();
    private int contadorPartidas = 0;
    private ImageIcon redCross = new ImageIcon("redCross.png");
    private ImageIcon blueCircle = new ImageIcon("blueCircle.png");
    private ImageIcon imgVacia = new ImageIcon("imgVacia.png");
    private int[][] matriz = new int[3][3];
    private String turn = "cruz";
    public JuegoNuevo(String usuario1, String usuario2) {
        this.usuario1 = usuario1;
        this.usuario2 = usuario2;
        initComponents();
        setLocationRelativeTo(null); 
        comenzarJuego("cruz");
        
        ChangeFonts.changeFont(jPanel1, 14);
        ChangeFonts.changeFont(jMenuBar1, 14);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        btn00 = new javax.swing.JButton();
        btn01 = new javax.swing.JButton();
        btn02 = new javax.swing.JButton();
        btn10 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        btn12 = new javax.swing.JButton();
        btn20 = new javax.swing.JButton();
        btn21 = new javax.swing.JButton();
        btn22 = new javax.swing.JButton();
        lblTurno = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemTablaResultados = new javax.swing.JMenuItem();
        jMenuItemNuevaPartida = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 350, 500));
        setMinimumSize(new java.awt.Dimension(500, 500));

        jPanel1.setMaximumSize(new java.awt.Dimension(800, 800));
        jPanel1.setMinimumSize(new java.awt.Dimension(400, 400));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        btn00.setMaximumSize(new java.awt.Dimension(0, 0));
        btn00.setMinimumSize(new java.awt.Dimension(0, 0));
        btn00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn00ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btn00, gridBagConstraints);

        btn01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn01ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btn01, gridBagConstraints);

        btn02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn02ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btn02, gridBagConstraints);

        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btn10, gridBagConstraints);

        btn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn11ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btn11, gridBagConstraints);

        btn12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn12ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btn12, gridBagConstraints);

        btn20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn20ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btn20, gridBagConstraints);

        btn21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn21ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btn21, gridBagConstraints);

        btn22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn22ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(btn22, gridBagConstraints);

        lblTurno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTurno.setToolTipText("");
        lblTurno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(lblTurno, gridBagConstraints);

        jMenu1.setText("Juego");

        jMenuItemTablaResultados.setText("Tabla de Resultados");
        jMenuItemTablaResultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTablaResultadosActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemTablaResultados);

        jMenuItemNuevaPartida.setText("Nueva Partida");
        jMenuItemNuevaPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevaPartidaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemNuevaPartida);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn00ActionPerformed

        ponerCruzCirculo(btn00, 0, 0);  
        
    }//GEN-LAST:event_btn00ActionPerformed

    private void btn01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn01ActionPerformed
        ponerCruzCirculo(btn01, 0, 1);  
    }//GEN-LAST:event_btn01ActionPerformed

    private void btn02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn02ActionPerformed
       ponerCruzCirculo(btn02, 0, 2);  
    }//GEN-LAST:event_btn02ActionPerformed

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
        ponerCruzCirculo(btn10, 1, 0); 
    }//GEN-LAST:event_btn10ActionPerformed

    private void btn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn11ActionPerformed
        ponerCruzCirculo(btn11, 1, 1); 
    }//GEN-LAST:event_btn11ActionPerformed

    private void btn12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn12ActionPerformed
        ponerCruzCirculo(btn12, 1, 2); 
    }//GEN-LAST:event_btn12ActionPerformed

    private void btn20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn20ActionPerformed
        ponerCruzCirculo(btn20, 2, 0); 
    }//GEN-LAST:event_btn20ActionPerformed

    private void btn21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn21ActionPerformed
      ponerCruzCirculo(btn21, 2, 1); 
    }//GEN-LAST:event_btn21ActionPerformed

    private void btn22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn22ActionPerformed
        ponerCruzCirculo(btn22, 2, 2); 
    }//GEN-LAST:event_btn22ActionPerformed

    private void jMenuItemTablaResultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTablaResultadosActionPerformed
        TablaResultados tablaresultados = new TablaResultados(this, true, this);
        tablaresultados.setVisible(true);
    }//GEN-LAST:event_jMenuItemTablaResultadosActionPerformed

    private void jMenuItemNuevaPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevaPartidaActionPerformed
        elegirTurno2out();
    }//GEN-LAST:event_jMenuItemNuevaPartidaActionPerformed

    
    
    
    
    
    private void comenzarJuego(String turno){
        for(int i=0; i<matriz.length;i++){
            for(int k=0; k<matriz[0].length;k++){
                matriz[i][k] = 0;
            }
        }
        
        partidas.add(new Partida(contadorPartidas,usuario1,usuario2));
        resetButtons(jPanel1);
        turn = turno;
        System.out.println("Partidas:" + partidas.toString());
        System.out.println("");
        System.out.println("Turno Actual:" + turno);
        System.out.println("Matriz:");
        for(int[] a: matriz){
            for(int i : a){
                System.out.print(i);
                System.out.print(" ");
            }
            System.out.println("");
        }
        
               
             
        setLabelTurno();
    }
    
    private void ponerCruzCirculo(JButton a,int row, int col){
        if(matriz[row][col] == 0){
            if(turn.equals("cruz")){
                matriz[row][col] = 1;
                Image icon = redCross.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
                a.setIcon(new ImageIcon(icon));
                turn="circulo";
                if(matrizCompleta(matriz)){
                    finDeJuego(comprobarGanador());             
                }else{
                    if(comprobarGanador()>0){
                        finDeJuego(comprobarGanador());                  
                    } 
                }
                setLabelTurno();
                
                
            }else if(turn.equals("circulo")){
                matriz[row][col] = 2;
                Image icon = blueCircle.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
                a.setIcon(new ImageIcon(icon));
                turn="cruz";
                if(matrizCompleta(matriz)){
                    finDeJuego(comprobarGanador());
                    
                }else{
                    if(comprobarGanador()>0){
                        finDeJuego(comprobarGanador());
                        
                    }
                    
                }
                setLabelTurno();
               
            } 
            
            
        }
       
        
    }
    
    private void resetButtons (Component component){
        try{
            if(component instanceof JButton){
                Image icon = imgVacia.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
                ((JButton) component).setIcon(new ImageIcon(icon));
            }

            if ( component instanceof Container ){
                for ( Component child : ( ( Container ) component ).getComponents () ){
                    resetButtons(child);
                }
            }
        }catch(Exception e){
            System.out.println("Error al resetear");
        }
        
        
    }
    
    private boolean matrizCompleta(int [][] m){
        
        for(int[] a : m){
            for(int e : a){
                if(e==0)return false;
            }
        }
        return true;
    }
    
    private void finDeJuego(int ganador){
        System.out.println("Fin del juego: "+ ganador);
        turn = "fin";
        if(ganador==1){
        partidas.get(contadorPartidas).setGanador(partidas.get(contadorPartidas).getUsuario1());
        FinDeJuego ventanafin = new FinDeJuego(this,true,this);
        
        ventanafin.setVisible(true);
        } else if(ganador==2){
        partidas.get(contadorPartidas).setGanador(partidas.get(contadorPartidas).getUsuario2());
        FinDeJuego ventanafin = new FinDeJuego(this,true,this);
        ventanafin.setVisible(true);
        }else{
        FinEmpate ventanaEmpate = new FinEmpate(this,true,this);
        ventanaEmpate.setVisible(true);
        }
            
        
        
    }
    
    private int comprobarGanador(){
        int cruz = 1;
        int cir = 2;
        for(int i=0; i<matriz.length;i++){
            //Ganador Cruz
            if((matriz[i][0]==cruz && matriz[i][1]==cruz && matriz[i][2]==cruz)
                || (matriz[0][i]==cruz && matriz[1][i]==cruz && matriz[2][i]==cruz)
                || (matriz[0][0]==cruz && matriz[1][1]==cruz && matriz[2][2]==cruz)
                || (matriz[0][2]==cruz && matriz[1][1]==cruz && matriz[2][0]==cruz)){
                System.out.println("Ganador");
                return cruz;
            }

            //Ganadro Circulo
             if((matriz[i][0]==cir && matriz[i][1]==cir && matriz[i][2]==cir)
                || (matriz[0][i]==cir && matriz[1][i]==cir && matriz[2][i]==cir)
                || (matriz[0][0]==cir && matriz[1][1]==cir && matriz[2][2]==cir)
                || (matriz[0][2]==cir && matriz[1][1]==cir && matriz[2][0]==cir)){
                System.out.println("Ganador");
                return cir;
            }
            
        }
        return 0;
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn00;
    private javax.swing.JButton btn01;
    private javax.swing.JButton btn02;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn12;
    private javax.swing.JButton btn20;
    private javax.swing.JButton btn21;
    private javax.swing.JButton btn22;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemNuevaPartida;
    private javax.swing.JMenuItem jMenuItemTablaResultados;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblTurno;
    // End of variables declaration//GEN-END:variables
    public String getUsuario1(){
        return usuario1;
    }

    public void setUsuario1(String u1){
        this.usuario1 = u1;
    }
    
    
    public void setUsuario2(String u2){
        this.usuario2 = u2;
    }
    
    public String getUsuario2(){
        return usuario2;
    }
    
    
    public ArrayList<Partida> getPartidas() {
        return partidas;
    }

    public void setPartidas(ArrayList<Partida> partidas) {
        this.partidas = partidas;
    }

    public int getContadorPartidas() {
        return contadorPartidas;
    }

    public void setContadorPartidas() {
        this.contadorPartidas++;
    }
    

    public void nuevoJuegoOut(){
        comenzarJuego("cruz");
    }
    
    public void elegirTurnoOut(){
        elegirTurno();
    }
    
    
    private void elegirTurno(){
        ElegirTurno ventanaElegirTurno = new ElegirTurno(this, true, this);
        ventanaElegirTurno.setVisible(true);
    }
    
    private void setLabelTurno(){
        
        lblTurno.setText("Le toca a " + (turn.equals("cruz")?usuario1:usuario2));
        
    }
    
    public void elegirTurno2out(){
        ElegirTurno2 ventanaElegirTurno2 = new ElegirTurno2(this,true,this);
        ventanaElegirTurno2.setVisible(true);        
    }
    
}
